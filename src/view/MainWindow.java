/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import model.Plane;
import model.Passenger;
import model.Airport;
import model.Flight;
import com.formdev.flatlaf.FlatDarkLaf;
import controller.PassengerController;
import controller.PlaneController;
import controller.AirportController;
import controller.FlightController;
import util.Response;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private PassengerController passengerController = new PassengerController();
    private PlaneController planeController = new PlaneController();
    private AirportController airportController = new AirportController();
    private FlightController flightController = new FlightController();

    public MainWindow() {
        initComponents();


        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }



    private void blockPanels() {
        //9, 11
        for (int i = 1; i < Panel.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                Panel.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            comboFormBirthMonth.addItem("" + i);
            comboDepartureMonth.addItem("" + i);
            comboPassengerBirthMonth.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            comboFormBirthDay.addItem("" + i);
            comboDepartureDay.addItem("" + i);
            comboPassengerBirthDay.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            comboDepartureHour.addItem("" + i);
            comboFlightHour1.addItem("" + i);
            comboFlightHour2.addItem("" + i);
            comboDelayHours.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            comboDepartureMinute.addItem("" + i);
            comboFlightMinute1.addItem("" + i);
            comboFlightMinute2.addItem("" + i);
            comboDelayMinutes.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new view.PanelRound();
        panelRound2 = new view.PanelRound();
        jButton13 = new javax.swing.JButton();
        Panel = new javax.swing.JTabbedPane();
        panelAdmin = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        panelPassengerRegistration = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFormPhoneCode = new javax.swing.JTextField();
        txtFormID = new javax.swing.JTextField();
        txtFormBirthYear = new javax.swing.JTextField();
        txtFormCountry = new javax.swing.JTextField();
        txtFormPhoneNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtFormLastName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        comboFormBirthMonth = new javax.swing.JComboBox<>();
        txtFormFirstName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        comboFormBirthDay = new javax.swing.JComboBox<>();
        btnRegisterPassenger = new javax.swing.JButton();
        panelAirplaneRegistration = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtPlaneID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPlaneBrand = new javax.swing.JTextField();
        txtPlaneModel = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtPlaneCapacity = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtPlaneAirline = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        btnRegisterAirplane = new javax.swing.JButton();
        panelLocationRegistration = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtAirportID = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtAirportName = new javax.swing.JTextField();
        txtAirportCity = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtAirportCountry = new javax.swing.JTextField();
        txtAirportLatitude = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtAirportLongitude = new javax.swing.JTextField();
        btnRegisterAirport = new javax.swing.JButton();
        panelFlightRegistration = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtFlightID = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        comboFlightPlane = new javax.swing.JComboBox<>();
        comboDepartureLocation = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        comboArrivalLocation = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        comboScaleLocation = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtDepartureYear = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        comboDepartureMonth = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        comboDepartureDay = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        comboDepartureHour = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        comboDepartureMinute = new javax.swing.JComboBox<>();
        comboFlightHour1 = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        comboFlightMinute1 = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        comboFlightHour2 = new javax.swing.JComboBox<>();
        comboFlightMinute2 = new javax.swing.JComboBox<>();
        btnRegisterFlight = new javax.swing.JButton();
        panelUpdateInfo = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        txtPassengerID = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtPassengerFirstName = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        txtPassengerLastName = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtPassengerBirthYear = new javax.swing.JTextField();
        comboPassengerBirthMonth = new javax.swing.JComboBox<>();
        comboPassengerBirthDay = new javax.swing.JComboBox<>();
        txtPassengerPhoneNumber = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtPassengerPhoneCode = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        txtPassengerCountry = new javax.swing.JTextField();
        btnUpdatePassenger = new javax.swing.JButton();
        panelAddToFlight = new javax.swing.JPanel();
        txtPassengerIDToAdd = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        comboSelectFlightToAdd = new javax.swing.JComboBox<>();
        btnAddToFlight = new javax.swing.JButton();
        panelMyFlights = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMyFlights = new javax.swing.JTable();
        btnShowMyFlights = new javax.swing.JButton();
        panelAllPassengers = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePassengers = new javax.swing.JTable();
        btnShowPassengers = new javax.swing.JButton();
        panelAllFlights = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableFlights = new javax.swing.JTable();
        btnShowFlights = new javax.swing.JButton();
        panelAllPlanes = new javax.swing.JPanel();
        btnShowPlanes = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablePlanes = new javax.swing.JTable();
        panelAllLocations = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableAirports = new javax.swing.JTable();
        btnShowAirports = new javax.swing.JButton();
        panelDelayFlight = new javax.swing.JPanel();
        comboDelayHours = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        comboSelectFlightID = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        comboDelayMinutes = new javax.swing.JComboBox<>();
        btnDelayFlight = new javax.swing.JButton();
        panelRound3 = new view.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        Panel.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        panelAdmin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        panelAdmin.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        panelAdmin.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        panelAdmin.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        Panel.addTab("Administration", panelAdmin);

        panelPassengerRegistration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setText("Country:");
        panelPassengerRegistration.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel2.setText("ID:");
        panelPassengerRegistration.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel3.setText("First Name:");
        panelPassengerRegistration.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel4.setText("Last Name:");
        panelPassengerRegistration.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel5.setText("Birthdate:");
        panelPassengerRegistration.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel6.setText("+");
        panelPassengerRegistration.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        txtFormPhoneCode.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormPhoneCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        txtFormID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        txtFormBirthYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormBirthYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        txtFormCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        txtFormPhoneNumber.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel7.setText("Phone:");
        panelPassengerRegistration.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel8.setText("-");
        panelPassengerRegistration.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        txtFormLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel9.setText("-");
        panelPassengerRegistration.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        comboFormBirthMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFormBirthMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        panelPassengerRegistration.add(comboFormBirthMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        txtFormFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelPassengerRegistration.add(txtFormFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel10.setText("-");
        panelPassengerRegistration.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        comboFormBirthDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFormBirthDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        panelPassengerRegistration.add(comboFormBirthDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        btnRegisterPassenger.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnRegisterPassenger.setText("Register");
        btnRegisterPassenger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterPassengerActionPerformed(evt);
            }
        });
        panelPassengerRegistration.add(btnRegisterPassenger, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        Panel.addTab("Passenger registration", panelPassengerRegistration);

        panelAirplaneRegistration.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel11.setText("ID:");
        panelAirplaneRegistration.add(jLabel11);
        jLabel11.setBounds(53, 96, 22, 25);

        txtPlaneID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelAirplaneRegistration.add(txtPlaneID);
        txtPlaneID.setBounds(180, 93, 130, 31);

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel12.setText("Brand:");
        panelAirplaneRegistration.add(jLabel12);
        jLabel12.setBounds(53, 157, 50, 25);

        txtPlaneBrand.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelAirplaneRegistration.add(txtPlaneBrand);
        txtPlaneBrand.setBounds(180, 154, 130, 31);

        txtPlaneModel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelAirplaneRegistration.add(txtPlaneModel);
        txtPlaneModel.setBounds(180, 213, 130, 31);

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel13.setText("Model:");
        panelAirplaneRegistration.add(jLabel13);
        jLabel13.setBounds(53, 216, 55, 25);

        txtPlaneCapacity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelAirplaneRegistration.add(txtPlaneCapacity);
        txtPlaneCapacity.setBounds(180, 273, 130, 31);

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel14.setText("Max Capacity:");
        panelAirplaneRegistration.add(jLabel14);
        jLabel14.setBounds(53, 276, 109, 25);

        txtPlaneAirline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        panelAirplaneRegistration.add(txtPlaneAirline);
        txtPlaneAirline.setBounds(180, 333, 130, 31);

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel15.setText("Airline:");
        panelAirplaneRegistration.add(jLabel15);
        jLabel15.setBounds(53, 336, 70, 25);

        btnRegisterAirplane.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnRegisterAirplane.setText("Create");
        btnRegisterAirplane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterAirplaneActionPerformed(evt);
            }
        });
        panelAirplaneRegistration.add(btnRegisterAirplane);
        btnRegisterAirplane.setBounds(490, 480, 120, 40);

        Panel.addTab("Airplane registration", panelAirplaneRegistration);

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel16.setText("Airport ID:");

        txtAirportID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel17.setText("Airport name:");

        txtAirportName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        txtAirportCity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel18.setText("Airport city:");

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel19.setText("Airport country:");

        txtAirportCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        txtAirportLatitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel20.setText("Airport latitude:");

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel21.setText("Airport longitude:");

        txtAirportLongitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        btnRegisterAirport.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnRegisterAirport.setText("Create");
        btnRegisterAirport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterAirportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLocationRegistrationLayout = new javax.swing.GroupLayout(panelLocationRegistration);
        panelLocationRegistration.setLayout(panelLocationRegistrationLayout);
        panelLocationRegistrationLayout.setHorizontalGroup(
            panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocationRegistrationLayout.createSequentialGroup()
                .addGroup(panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLocationRegistrationLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(80, 80, 80)
                        .addGroup(panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAirportLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirportID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirportName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirportCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirportCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirportLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLocationRegistrationLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(btnRegisterAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(527, 527, 527))
        );
        panelLocationRegistrationLayout.setVerticalGroup(
            panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocationRegistrationLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelLocationRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel17)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel18)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel19)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel20))
                    .addGroup(panelLocationRegistrationLayout.createSequentialGroup()
                        .addComponent(txtAirportID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtAirportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtAirportCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtAirportCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtAirportLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(panelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtAirportLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(btnRegisterAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        Panel.addTab("Location registration", panelLocationRegistration);

        jLabel22.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel22.setText("ID:");

        txtFlightID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel23.setText("Plane:");

        comboFlightPlane.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFlightPlane.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        comboDepartureLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDepartureLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel24.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel24.setText("Departure location:");

        comboArrivalLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboArrivalLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel25.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel25.setText("Arrival location:");

        jLabel26.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel26.setText("Scale location:");

        comboScaleLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboScaleLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel27.setText("Duration:");

        jLabel28.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel28.setText("Duration:");

        jLabel29.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel29.setText("Departure date:");

        txtDepartureYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel30.setText("-");

        comboDepartureMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDepartureMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel31.setText("-");

        comboDepartureDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDepartureDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel32.setText("-");

        comboDepartureHour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDepartureHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel33.setText("-");

        comboDepartureMinute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDepartureMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        comboFlightHour1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFlightHour1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel34.setText("-");

        comboFlightMinute1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFlightMinute1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel35.setText("-");

        comboFlightHour2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFlightHour2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        comboFlightMinute2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboFlightMinute2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        btnRegisterFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnRegisterFlight.setText("Create");
        btnRegisterFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFlightRegistrationLayout = new javax.swing.GroupLayout(panelFlightRegistration);
        panelFlightRegistration.setLayout(panelFlightRegistrationLayout);
        panelFlightRegistrationLayout.setHorizontalGroup(
            panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboScaleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(46, 46, 46)
                        .addComponent(comboDepartureLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFlightID)
                            .addComponent(comboFlightPlane, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(txtDepartureYear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(comboDepartureMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(comboDepartureDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(comboDepartureHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(comboDepartureMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                .addComponent(comboFlightHour1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(comboFlightMinute1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                .addComponent(comboFlightHour2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(comboFlightMinute2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFlightRegistrationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegisterFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        panelFlightRegistrationLayout.setVerticalGroup(
            panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel22))
                    .addComponent(txtFlightID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(comboFlightPlane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboDepartureHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(comboDepartureMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(comboDepartureLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29))
                            .addComponent(txtDepartureYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDepartureMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(comboDepartureDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(comboArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addComponent(comboFlightHour1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(comboFlightMinute1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboFlightHour2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(comboFlightMinute2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(comboScaleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(btnRegisterFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        Panel.addTab("Flight registration", panelFlightRegistration);

        jLabel36.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel36.setText("ID:");

        txtPassengerID.setEditable(false);
        txtPassengerID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtPassengerID.setEnabled(false);

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel37.setText("First Name:");

        txtPassengerFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel38.setText("Last Name:");

        txtPassengerLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel39.setText("Birthdate:");

        txtPassengerBirthYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        comboPassengerBirthMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboPassengerBirthMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        comboPassengerBirthDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboPassengerBirthDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        txtPassengerPhoneNumber.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel40.setText("-");

        txtPassengerPhoneCode.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel41.setText("+");

        jLabel42.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel42.setText("Phone:");

        jLabel43.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel43.setText("Country:");

        txtPassengerCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        btnUpdatePassenger.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnUpdatePassenger.setText("Update");
        btnUpdatePassenger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePassengerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdateInfoLayout = new javax.swing.GroupLayout(panelUpdateInfo);
        panelUpdateInfo.setLayout(panelUpdateInfoLayout);
        panelUpdateInfoLayout.setHorizontalGroup(
            panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addGap(108, 108, 108)
                                .addComponent(txtPassengerID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(41, 41, 41)
                                .addComponent(txtPassengerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(43, 43, 43)
                                .addComponent(txtPassengerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(55, 55, 55)
                                .addComponent(txtPassengerBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(comboPassengerBirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(comboPassengerBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txtPassengerPhoneCode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txtPassengerPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addGap(63, 63, 63)
                                .addComponent(txtPassengerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(btnUpdatePassenger)))
                .addContainerGap(555, Short.MAX_VALUE))
        );
        panelUpdateInfoLayout.setVerticalGroup(
            panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateInfoLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(txtPassengerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(txtPassengerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(txtPassengerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(txtPassengerBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPassengerBirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPassengerBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42)
                    .addComponent(jLabel41)
                    .addComponent(txtPassengerPhoneCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(txtPassengerPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(txtPassengerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(btnUpdatePassenger)
                .addGap(113, 113, 113))
        );

        Panel.addTab("Update info", panelUpdateInfo);

        txtPassengerIDToAdd.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtPassengerIDToAdd.setEnabled(false);

        jLabel44.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel44.setText("ID:");

        jLabel45.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel45.setText("Flight:");

        comboSelectFlightToAdd.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSelectFlightToAdd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        btnAddToFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnAddToFlight.setText("Add");
        btnAddToFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddToFlightLayout = new javax.swing.GroupLayout(panelAddToFlight);
        panelAddToFlight.setLayout(panelAddToFlightLayout);
        panelAddToFlightLayout.setHorizontalGroup(
            panelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddToFlightLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(panelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45))
                .addGap(79, 79, 79)
                .addGroup(panelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboSelectFlightToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassengerIDToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(829, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddToFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddToFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        panelAddToFlightLayout.setVerticalGroup(
            panelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddToFlightLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(panelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddToFlightLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel44))
                    .addComponent(txtPassengerIDToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(panelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(comboSelectFlightToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(btnAddToFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        Panel.addTab("Add to flight", panelAddToFlight);

        tableMyFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tableMyFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableMyFlights);

        btnShowMyFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowMyFlights.setText("Refresh");
        btnShowMyFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowMyFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMyFlightsLayout = new javax.swing.GroupLayout(panelMyFlights);
        panelMyFlights.setLayout(panelMyFlightsLayout);
        panelMyFlightsLayout.setHorizontalGroup(
            panelMyFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMyFlightsLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMyFlightsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnShowMyFlights)
                .addGap(527, 527, 527))
        );
        panelMyFlightsLayout.setVerticalGroup(
            panelMyFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMyFlightsLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnShowMyFlights)
                .addContainerGap())
        );

        Panel.addTab("Show my flights", panelMyFlights);

        tablePassengers.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tablePassengers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablePassengers);

        btnShowPassengers.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowPassengers.setText("Refresh");
        btnShowPassengers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPassengersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAllPassengersLayout = new javax.swing.GroupLayout(panelAllPassengers);
        panelAllPassengers.setLayout(panelAllPassengersLayout);
        panelAllPassengersLayout.setHorizontalGroup(
            panelAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAllPassengersLayout.createSequentialGroup()
                .addGroup(panelAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAllPassengersLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(btnShowPassengers))
                    .addGroup(panelAllPassengersLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        panelAllPassengersLayout.setVerticalGroup(
            panelAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAllPassengersLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowPassengers)
                .addContainerGap())
        );

        Panel.addTab("Show all passengers", panelAllPassengers);

        tableFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tableFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableFlights);

        btnShowFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowFlights.setText("Refresh");
        btnShowFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAllFlightsLayout = new javax.swing.GroupLayout(panelAllFlights);
        panelAllFlights.setLayout(panelAllFlightsLayout);
        panelAllFlightsLayout.setHorizontalGroup(
            panelAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAllFlightsLayout.createSequentialGroup()
                .addGap(521, 521, 521)
                .addComponent(btnShowFlights)
                .addContainerGap(540, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAllFlightsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelAllFlightsLayout.setVerticalGroup(
            panelAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAllFlightsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowFlights)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        Panel.addTab("Show all flights", panelAllFlights);

        btnShowPlanes.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowPlanes.setText("Refresh");
        btnShowPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPlanesActionPerformed(evt);
            }
        });

        tablePlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablePlanes);

        javax.swing.GroupLayout panelAllPlanesLayout = new javax.swing.GroupLayout(panelAllPlanes);
        panelAllPlanes.setLayout(panelAllPlanesLayout);
        panelAllPlanesLayout.setHorizontalGroup(
            panelAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAllPlanesLayout.createSequentialGroup()
                .addGroup(panelAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAllPlanesLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btnShowPlanes))
                    .addGroup(panelAllPlanesLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        panelAllPlanesLayout.setVerticalGroup(
            panelAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAllPlanesLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnShowPlanes)
                .addGap(17, 17, 17))
        );

        Panel.addTab("Show all planes", panelAllPlanes);

        tableAirports.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableAirports);

        btnShowAirports.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowAirports.setText("Refresh");
        btnShowAirports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAirportsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAllLocationsLayout = new javax.swing.GroupLayout(panelAllLocations);
        panelAllLocations.setLayout(panelAllLocationsLayout);
        panelAllLocationsLayout.setHorizontalGroup(
            panelAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAllLocationsLayout.createSequentialGroup()
                .addGroup(panelAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAllLocationsLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btnShowAirports))
                    .addGroup(panelAllLocationsLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        panelAllLocationsLayout.setVerticalGroup(
            panelAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAllLocationsLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnShowAirports)
                .addGap(17, 17, 17))
        );

        Panel.addTab("Show all locations", panelAllLocations);

        comboDelayHours.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDelayHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel46.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel46.setText("Hours:");

        jLabel47.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel47.setText("ID:");

        comboSelectFlightID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSelectFlightID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        jLabel48.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel48.setText("Minutes:");

        comboDelayMinutes.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboDelayMinutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        btnDelayFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnDelayFlight.setText("Delay");
        btnDelayFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelayFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDelayFlightLayout = new javax.swing.GroupLayout(panelDelayFlight);
        panelDelayFlight.setLayout(panelDelayFlightLayout);
        panelDelayFlightLayout.setHorizontalGroup(
            panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDelayFlightLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDelayFlightLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboDelayMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDelayFlightLayout.createSequentialGroup()
                        .addGroup(panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel46))
                        .addGap(79, 79, 79)
                        .addGroup(panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboDelayHours, 0, 105, Short.MAX_VALUE)
                            .addComponent(comboSelectFlightID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDelayFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelayFlight)
                .addGap(531, 531, 531))
        );
        panelDelayFlightLayout.setVerticalGroup(
            panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDelayFlightLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(comboSelectFlightID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(comboDelayHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(comboDelayMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(btnDelayFlight)
                .addGap(33, 33, 33))
        );

        Panel.addTab("Delay flight", panelDelayFlight);

        panelRound1.add(Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < Panel.getTabCount(); i++) {
                Panel.setEnabledAt(i, true);
        }
        Panel.setEnabledAt(5, false);
        Panel.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < Panel.getTabCount(); i++) {

            Panel.setEnabledAt(i, false);

        }
        Panel.setEnabledAt(9, true);
        Panel.setEnabledAt(5, true);
        Panel.setEnabledAt(6, true);
        Panel.setEnabledAt(7, true);
        Panel.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void btnRegisterPassengerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterPassengerActionPerformed
       try {
        long id = Long.parseLong(txtFormID.getText());
        String firstname = txtFormFirstName.getText();
        String lastname = txtFormLastName.getText();
        int year = Integer.parseInt(txtFormBirthYear.getText());
        int month = Integer.parseInt(comboFormBirthMonth.getItemAt(comboFormBirthMonth.getSelectedIndex()));
        int day = Integer.parseInt(comboFormBirthDay.getItemAt(comboFormBirthDay.getSelectedIndex()));
        int phoneCode = Integer.parseInt(txtFormPhoneCode.getText());
        long phone = Long.parseLong(txtFormPhoneNumber.getText());
        String country = txtFormCountry.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger p = new Passenger(id, firstname, lastname, birthDate, phoneCode, phone, country);
        Response res = passengerController.registerPassenger(p);

        JOptionPane.showMessageDialog(this, res.getMessage());

        if (res.getStatusCode() == 200) {
            txtFormID.setText("");
            txtFormFirstName.setText("");
            txtFormLastName.setText("");
            txtFormBirthYear.setText("");
            txtFormPhoneCode.setText("");
            txtFormPhoneNumber.setText("");
            txtFormCountry.setText("");
            comboFormBirthMonth.setSelectedIndex(0);
            comboFormBirthDay.setSelectedIndex(0);

            // Si quieres, también actualizas el combo de users
            userSelect.addItem("" + id);
        }

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Error: Invalid number format");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Unexpected error: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnRegisterPassengerActionPerformed

    private void btnRegisterAirplaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterAirplaneActionPerformed
        String id = txtPlaneID.getText();
        String brand = txtPlaneBrand.getText();
        String model = txtPlaneModel.getText();
        int maxCapacity = Integer.parseInt(txtPlaneCapacity.getText());
        String airline = txtPlaneAirline.getText();

        Plane plane = new Plane(id, brand, model, maxCapacity, airline);
        Response res = planeController.registerPlane(plane);

        JOptionPane.showMessageDialog(this, res.getMessage());

        if (res.getStatusCode() == 200) {
            comboFlightPlane.addItem(id);

            txtPlaneID.setText("");
            txtPlaneBrand.setText("");
            txtPlaneModel.setText("");
            txtPlaneCapacity.setText("");
            txtPlaneAirline.setText("");
        }

    }//GEN-LAST:event_btnRegisterAirplaneActionPerformed

    private void btnRegisterAirportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterAirportActionPerformed
        String id = txtAirportID.getText();
        String name = txtAirportName.getText();
        String city = txtAirportCity.getText();
        String country = txtAirportCountry.getText();
        double latitude = Double.parseDouble(txtAirportLatitude.getText());
        double longitude = Double.parseDouble(txtAirportLongitude.getText());

        Airport airport = new Airport(id, name, city, country, latitude, longitude);
        Response res = airportController.registerAirport(airport);

        JOptionPane.showMessageDialog(this, res.getMessage());

        if (res.getStatusCode() == 200) {
            comboDepartureLocation.addItem(id);
            comboArrivalLocation.addItem(id);
            comboScaleLocation.addItem(id);

            txtAirportID.setText("");
            txtAirportName.setText("");
            txtAirportCity.setText("");
            txtAirportCountry.setText("");
            txtAirportLatitude.setText("");
            txtAirportLongitude.setText("");
        }

    }//GEN-LAST:event_btnRegisterAirportActionPerformed

    private void btnRegisterFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterFlightActionPerformed
        String id = txtFlightID.getText();
        String planeId = comboFlightPlane.getSelectedItem().toString();
        String departureLocationId = comboDepartureLocation.getSelectedItem().toString();
        String arrivalLocationId = comboArrivalLocation.getSelectedItem().toString();
        String scaleLocationId = comboScaleLocation.getSelectedItem().toString();
        int year = Integer.parseInt(txtDepartureYear.getText());
        int month = Integer.parseInt(comboDepartureMonth.getSelectedItem().toString());
        int day = Integer.parseInt(comboDepartureDay.getSelectedItem().toString());
        int hour = Integer.parseInt(comboDepartureHour.getSelectedItem().toString());
        int minutes = Integer.parseInt(comboDepartureMinute.getSelectedItem().toString());
        int hoursDurationsArrival = Integer.parseInt(comboFlightHour1.getSelectedItem().toString());
        int minutesDurationsArrival = Integer.parseInt(comboFlightMinute1.getSelectedItem().toString());
        int hoursDurationsScale = Integer.parseInt(comboFlightHour2.getSelectedItem().toString());
        int minutesDurationsScale = Integer.parseInt(comboFlightMinute2.getSelectedItem().toString());

        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);

        // Buscar objetos en los controladores
        Plane plane = null;
        for (Plane p : planeController.getPlanes()) {
            if (planeId.equals(p.getId())) {
                plane = p;
            }
        }

        Airport departure = null, arrival = null, scale = null;
        for (Airport a : airportController.getAirports()) {
            if (a.getAirportId().equals(departureLocationId)) departure = a;
            if (a.getAirportId().equals(arrivalLocationId)) arrival = a;
            if (a.getAirportId().equals(scaleLocationId)) scale = a;
        }

        // Crear el vuelo
        Flight flight;
        if (scale == null) {
            flight = new Flight(id, plane, departure, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival);
        } else {
            flight = new Flight(id, plane, departure, scale, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale);
        }

        // Registrar vuelo con el controlador
        Response res = flightController.registerFlight(flight);
        JOptionPane.showMessageDialog(this, res.getMessage());

        // Si todo salió bien, actualizar los combos
        if (res.getStatusCode() == 200) {
            comboSelectFlightToAdd.addItem(id);
            comboSelectFlightID.addItem(id);

            // Limpiar campos si quieres
            txtFlightID.setText("");
            txtDepartureYear.setText("");
            comboDepartureMonth.setSelectedIndex(0);
            comboDepartureDay.setSelectedIndex(0);
            comboDepartureHour.setSelectedIndex(0);
            comboDepartureMinute.setSelectedIndex(0);
            comboFlightHour1.setSelectedIndex(0);
            comboFlightMinute1.setSelectedIndex(0);
            comboFlightHour2.setSelectedIndex(0);
            comboFlightMinute2.setSelectedIndex(0);
        }

    }//GEN-LAST:event_btnRegisterFlightActionPerformed

    private void btnUpdatePassengerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePassengerActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(txtPassengerID.getText());
        String firstname = txtPassengerFirstName.getText();
        String lastname = txtPassengerLastName.getText();
        int year = Integer.parseInt(txtPassengerBirthYear.getText());
        int month = Integer.parseInt(comboFormBirthMonth.getItemAt(comboPassengerBirthMonth.getSelectedIndex()));
        int day = Integer.parseInt(comboFormBirthDay.getItemAt(comboPassengerBirthDay.getSelectedIndex()));
        int phoneCode = Integer.parseInt(txtPassengerPhoneCode.getText());
        long phone = Long.parseLong(txtPassengerPhoneNumber.getText());
        String country = txtPassengerCountry.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger passenger = null;
        for (Passenger p : passengerController.getPassengers()) {
            if (p.getId() == id) {
                passenger = p;
            }
        }


        passenger.setFirstname(firstname);
        passenger.setLastname(lastname);
        passenger.setBirthDate(birthDate);
        passenger.setCountryPhoneCode(phoneCode);
        passenger.setPhone(phone);
        passenger.setCountry(country);
    }//GEN-LAST:event_btnUpdatePassengerActionPerformed

    private void btnAddToFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToFlightActionPerformed
        long passengerId = Long.parseLong(txtPassengerIDToAdd.getText());
        String flightId = comboSelectFlightToAdd.getSelectedItem().toString();

        Passenger passenger = null;
        for (Passenger p : passengerController.getPassengers()) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        Flight flight = null;
        for (Flight f : flightController.getFlights()) {
            if (f.getId().equals(flightId)) {
                flight = f;
            }
        }

        if (passenger != null && flight != null) {
            Response res = flightController.addPassengerToFlight(flight, passenger);
            JOptionPane.showMessageDialog(this, res.getMessage());
        } else {
            JOptionPane.showMessageDialog(this, "Error: Passenger or Flight not found.");
        }

    }//GEN-LAST:event_btnAddToFlightActionPerformed

    private void btnDelayFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelayFlightActionPerformed
        // TODO add your handling code here:
        String flightId = comboSelectFlightID.getSelectedItem().toString();
        int hours = Integer.parseInt(comboDelayHours.getSelectedItem().toString());
        int minutes = Integer.parseInt(comboDelayMinutes.getSelectedItem().toString());

        Flight flight = null;
        for (Flight f : flightController.getFlights()) {
            if (f.getId().equals(flightId)) {
                flight = f;
            }
        }

        if (flight != null) {
            Response res = flightController.delayFlight(flight, hours, minutes);
            JOptionPane.showMessageDialog(this, res.getMessage());
        } else {
            JOptionPane.showMessageDialog(this, "Error: Flight not found.");
        }


    }//GEN-LAST:event_btnDelayFlightActionPerformed

    private void btnShowMyFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowMyFlightsActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(userSelect.getSelectedItem().toString());

        Passenger passenger = null;
        for (Passenger p : passengerController.getPassengers()) {
            if (p.getId() == passengerId) {
                passenger = p;
                break;
            }
        }

        if (passenger != null) {
            DefaultTableModel model = (DefaultTableModel) tableMyFlights.getModel();
            model.setRowCount(0);
            for (Flight flight : passenger.getFlights()) {
                model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
            }
        }
    }//GEN-LAST:event_btnShowMyFlightsActionPerformed

    private void btnShowPassengersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPassengersActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablePassengers.getModel();
        model.setRowCount(0);
        for (Passenger passenger : passengerController.getPassengers()) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_btnShowPassengersActionPerformed

    private void btnShowFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowFlightsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableFlights.getModel();
        model.setRowCount(0);
        for (Flight flight : flightController.getFlights()) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_btnShowFlightsActionPerformed

    private void btnShowPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPlanesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablePlanes.getModel();
        model.setRowCount(0);
        for (Plane plane : planeController.getPlanes()) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_btnShowPlanesActionPerformed

    private void btnShowAirportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAirportsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableAirports.getModel();
        model.setRowCount(0);
        for (Airport location : airportController.getAirports()) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_btnShowAirportsActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (! id.equals(userSelect.getItemAt(0))) {
                txtPassengerID.setText(id);
                txtPassengerIDToAdd.setText(id);
            }
            else{
                txtPassengerID.setText("");
                txtPassengerIDToAdd.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.setProperty("flatlaf.useNativeLibrary", "false");

        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Panel;
    private javax.swing.JRadioButton administrator;
    private javax.swing.JButton btnAddToFlight;
    private javax.swing.JButton btnDelayFlight;
    private javax.swing.JButton btnRegisterAirplane;
    private javax.swing.JButton btnRegisterAirport;
    private javax.swing.JButton btnRegisterFlight;
    private javax.swing.JButton btnRegisterPassenger;
    private javax.swing.JButton btnShowAirports;
    private javax.swing.JButton btnShowFlights;
    private javax.swing.JButton btnShowMyFlights;
    private javax.swing.JButton btnShowPassengers;
    private javax.swing.JButton btnShowPlanes;
    private javax.swing.JButton btnUpdatePassenger;
    private javax.swing.JComboBox<String> comboArrivalLocation;
    private javax.swing.JComboBox<String> comboDelayHours;
    private javax.swing.JComboBox<String> comboDelayMinutes;
    private javax.swing.JComboBox<String> comboDepartureDay;
    private javax.swing.JComboBox<String> comboDepartureHour;
    private javax.swing.JComboBox<String> comboDepartureLocation;
    private javax.swing.JComboBox<String> comboDepartureMinute;
    private javax.swing.JComboBox<String> comboDepartureMonth;
    private javax.swing.JComboBox<String> comboFlightHour1;
    private javax.swing.JComboBox<String> comboFlightHour2;
    private javax.swing.JComboBox<String> comboFlightMinute1;
    private javax.swing.JComboBox<String> comboFlightMinute2;
    private javax.swing.JComboBox<String> comboFlightPlane;
    private javax.swing.JComboBox<String> comboFormBirthDay;
    private javax.swing.JComboBox<String> comboFormBirthMonth;
    private javax.swing.JComboBox<String> comboPassengerBirthDay;
    private javax.swing.JComboBox<String> comboPassengerBirthMonth;
    private javax.swing.JComboBox<String> comboScaleLocation;
    private javax.swing.JComboBox<String> comboSelectFlightID;
    private javax.swing.JComboBox<String> comboSelectFlightToAdd;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel panelAddToFlight;
    private javax.swing.JPanel panelAdmin;
    private javax.swing.JPanel panelAirplaneRegistration;
    private javax.swing.JPanel panelAllFlights;
    private javax.swing.JPanel panelAllLocations;
    private javax.swing.JPanel panelAllPassengers;
    private javax.swing.JPanel panelAllPlanes;
    private javax.swing.JPanel panelDelayFlight;
    private javax.swing.JPanel panelFlightRegistration;
    private javax.swing.JPanel panelLocationRegistration;
    private javax.swing.JPanel panelMyFlights;
    private javax.swing.JPanel panelPassengerRegistration;
    private view.PanelRound panelRound1;
    private view.PanelRound panelRound2;
    private view.PanelRound panelRound3;
    private javax.swing.JPanel panelUpdateInfo;
    private javax.swing.JTable tableAirports;
    private javax.swing.JTable tableFlights;
    private javax.swing.JTable tableMyFlights;
    private javax.swing.JTable tablePassengers;
    private javax.swing.JTable tablePlanes;
    private javax.swing.JTextField txtAirportCity;
    private javax.swing.JTextField txtAirportCountry;
    private javax.swing.JTextField txtAirportID;
    private javax.swing.JTextField txtAirportLatitude;
    private javax.swing.JTextField txtAirportLongitude;
    private javax.swing.JTextField txtAirportName;
    private javax.swing.JTextField txtDepartureYear;
    private javax.swing.JTextField txtFlightID;
    private javax.swing.JTextField txtFormBirthYear;
    private javax.swing.JTextField txtFormCountry;
    private javax.swing.JTextField txtFormFirstName;
    private javax.swing.JTextField txtFormID;
    private javax.swing.JTextField txtFormLastName;
    private javax.swing.JTextField txtFormPhoneCode;
    private javax.swing.JTextField txtFormPhoneNumber;
    private javax.swing.JTextField txtPassengerBirthYear;
    private javax.swing.JTextField txtPassengerCountry;
    private javax.swing.JTextField txtPassengerFirstName;
    private javax.swing.JTextField txtPassengerID;
    private javax.swing.JTextField txtPassengerIDToAdd;
    private javax.swing.JTextField txtPassengerLastName;
    private javax.swing.JTextField txtPassengerPhoneCode;
    private javax.swing.JTextField txtPassengerPhoneNumber;
    private javax.swing.JTextField txtPlaneAirline;
    private javax.swing.JTextField txtPlaneBrand;
    private javax.swing.JTextField txtPlaneCapacity;
    private javax.swing.JTextField txtPlaneID;
    private javax.swing.JTextField txtPlaneModel;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
